version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: ./deployment/Dockerfile
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgres://${DB_USER:-keeviqo_user}:${DB_PASSWORD:-keeviqo_password}@db:5432/${DB_NAME:-keeviqo}
      - SESSION_SECRET=${SESSION_SECRET:-keeviqo_secret}
    volumes:
      - uploads:/app/uploads
    networks:
      - keeviqo-network

  db:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER:-keeviqo_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-keeviqo_password}
      - POSTGRES_DB=${DB_NAME:-keeviqo}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db-migration.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - keeviqo-network

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - uploads:/var/www/uploads
    depends_on:
      - app
    networks:
      - keeviqo-network

volumes:
  postgres-data:
  uploads:

networks:
  keeviqo-network:
    driver: bridge
